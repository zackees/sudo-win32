Currently sudo_win32 asks for credentials every time

To make this work more like linux in which sudo lasts for a while it is necessary to create a
daemon process that will hold the credentials. This daemon process will hold the credentials
and when those credentials are needed it will pass them to the child process.

When these credentials.xml file is needed it will downloaded from the credentials daemon and then
stored in a temporary file (or maybe in memory, see links). The credentials.xml file will be deleted when
the sudo_win32 process exits. If just in memory then this isn't an issue.

With the credentials in memory a new subprocess can be created that will use the credentials to
run the elevated command.

The reason to use a daemon process is that the credentials are stored in memory and not on disk. Also
the PSCredential does not enforce any sort of expiration so if someone can get the credentials then
they can run commands as the user. With a daemon, the credentials are stored in memory and and the
time limit is enforced by the daemon. When the computer is rebooted the daemon will be killed and
the keys will be erased.


Links
  * Converting an instring representation of a clixml to valid credential file
    * https://stackoverflow.com/questions/2369916/powershells-import-clixml-from-a-string